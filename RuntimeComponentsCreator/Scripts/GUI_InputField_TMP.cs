using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using TMPro;
using UnityEngine.UI;
using System.Reflection;
using System;

namespace RuntimeComponents.UI
{
 public class GUI_InputField_TMP : MonoBehaviour
 {
    public static void InputField(GameObject Canvas)
    {
       Texture2D tex = new Texture2D(2, 2);
byte[] InputFieldBackground = new byte[] 
{
	0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D,
	0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20,
	0x08, 0x06, 0x00, 0x00, 0x00, 0x73, 0x7A, 0x7A, 0xF4, 0x00, 0x00, 0x00,
	0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0E, 0xC4, 0x00, 0x00, 0x0E,
	0xC4, 0x01, 0x95, 0x2B, 0x0E, 0x1B, 0x00, 0x00, 0x02, 0xDF, 0x49, 0x44,
	0x41, 0x54, 0x78, 0x9C, 0xED, 0x57, 0x4D, 0x68, 0x5A, 0x41, 0x10, 0x1E,
	0xF3, 0x9E, 0x9A, 0xA8, 0x20, 0x5E, 0x23, 0x41, 0x2A, 0x01, 0x41, 0x28,
	0x14, 0x24, 0x87, 0x9C, 0x8A, 0x85, 0x06, 0x3D, 0xF5, 0xEA, 0xC1, 0x3F,
	0x08, 0x16, 0x02, 0x42, 0xC1, 0x84, 0x9E, 0x7A, 0x0C, 0x14, 0x4A, 0x6A,
	0x40, 0x0A, 0x85, 0x40, 0x4E, 0x09, 0x24, 0x10, 0x2F, 0x3D, 0x14, 0x93,
	0x14, 0x1A, 0x7A, 0x13, 0xBD, 0x14, 0x02, 0x05, 0x8F, 0xD6, 0x8B, 0xDE,
	0x8B, 0x26, 0x1A, 0x63, 0xE7, 0xDB, 0xB8, 0xB2, 0x8A, 0x2D, 0x68, 0x7C,
	0xB4, 0x87, 0x7C, 0x30, 0xAC, 0x38, 0xBB, 0xF3, 0x7D, 0x3B, 0x3B, 0xEF,
	0xBD, 0x1D, 0xDD, 0xEF, 0xF7, 0x93, 0x8A, 0xF9, 0xF9, 0x79, 0x9A, 0x9B,
	0x9B, 0x13, 0xBF, 0x6F, 0x6F, 0x6F, 0xC5, 0xD8, 0xEB, 0xF5, 0xC8, 0x64,
	0x32, 0xD1, 0x24, 0x50, 0xD7, 0xA8, 0xF1, 0xAE, 0xAE, 0xAE, 0x86, 0xE6,
	0xE9, 0x56, 0xAB, 0x95, 0xAE, 0xAF, 0xAF, 0x49, 0x8E, 0x58, 0xD8, 0xED,
	0x76, 0x49, 0xD3, 0x34, 0x9A, 0x25, 0x10, 0x53, 0x02, 0x9B, 0x84, 0x10,
	0x8C, 0x3A, 0x88, 0x6C, 0x36, 0x1B, 0x35, 0x9B, 0x4D, 0xE1, 0x54, 0x88,
	0x7D, 0x6C, 0x2F, 0xD9, 0x9E, 0xB2, 0x3D, 0x81, 0x6B, 0x52, 0x4E, 0xB6,
	0xEF, 0x6C, 0xDF, 0xD8, 0xF6, 0x38, 0x6E, 0x45, 0x3A, 0x40, 0x0E, 0x4E,
	0x40, 0x87, 0x32, 0x35, 0x03, 0x7D, 0xA5, 0x19, 0xB6, 0xED, 0x48, 0x24,
	0xB2, 0xE0, 0xF3, 0xF9, 0xC8, 0xE3, 0xF1, 0x4C, 0x9C, 0x11, 0x8E, 0xA3,
	0x55, 0xAB, 0xD5, 0x40, 0xA5, 0x52, 0x09, 0x1C, 0x1F, 0x1F, 0x6F, 0xF0,
	0x5F, 0x6F, 0xD8, 0xB2, 0xF0, 0x81, 0x0B, 0x1B, 0xC6, 0xA8, 0x83, 0x14,
	0xE8, 0x8F, 0x16, 0x3E, 0xB7, 0x4F, 0xC1, 0x60, 0x30, 0x14, 0x0E, 0x87,
	0xC9, 0xED, 0x76, 0x0B, 0x62, 0x9C, 0xE1, 0x34, 0x35, 0x80, 0xFA, 0xC2,
	0x06, 0x02, 0x81, 0xC0, 0x42, 0xA1, 0x50, 0x78, 0x7F, 0x71, 0x71, 0xF1,
	0x9C, 0x5D, 0x2F, 0x98, 0xAB, 0x2D, 0x39, 0x45, 0x0D, 0x28, 0x78, 0xB7,
	0xB6, 0xB6, 0x16, 0x4A, 0x26, 0x93, 0x42, 0x9D, 0xC5, 0x62, 0x21, 0x5D,
	0xD7, 0x07, 0x22, 0x26, 0x01, 0x0A, 0x0E, 0xD9, 0xBC, 0xB9, 0xB9, 0x11,
	0x67, 0x9D, 0x4A, 0xA5, 0xC8, 0x6C, 0x36, 0x87, 0xCE, 0xCF, 0xCF, 0xDF,
	0xB2, 0x7B, 0x53, 0xCE, 0xD3, 0x95, 0xC0, 0x8F, 0x79, 0x51, 0x3A, 0x91,
	0x48, 0x90, 0xC3, 0xE1, 0x10, 0x8B, 0x20, 0xE2, 0x3E, 0x19, 0x90, 0x22,
	0xB0, 0x53, 0x26, 0xA7, 0x58, 0x2C, 0x46, 0x67, 0x67, 0x67, 0xAF, 0xD8,
	0xB7, 0xCF, 0x53, 0x7E, 0x08, 0x01, 0xF2, 0x51, 0x63, 0xAC, 0xF3, 0xCE,
	0x35, 0xA7, 0xD3, 0x29, 0x0A, 0x04, 0x02, 0x54, 0xF2, 0x69, 0x04, 0x48,
	0x11, 0x20, 0x47, 0x26, 0x11, 0x2B, 0x1E, 0x8F, 0x6B, 0x07, 0x07, 0x07,
	0xEB, 0x32, 0x0B, 0xBA, 0xB2, 0x26, 0xB4, 0xBA, 0xBA, 0x4A, 0x76, 0xBB,
	0xFD, 0xEE, 0xF1, 0xE8, 0x2F, 0x98, 0x16, 0x52, 0x34, 0x62, 0xA8, 0x9B,
	0x00, 0x07, 0x0B, 0x08, 0x0D, 0x04, 0x28, 0x3B, 0x7B, 0x84, 0x6A, 0x17,
	0x95, 0x79, 0x4F, 0xF2, 0x51, 0x20, 0x16, 0x62, 0x22, 0xF6, 0xE2, 0xE2,
	0x22, 0x32, 0xE3, 0x96, 0x3E, 0x35, 0x03, 0x16, 0xA4, 0x7E, 0xD6, 0xE4,
	0xA3, 0x22, 0x5C, 0x2E, 0x17, 0x32, 0xE1, 0x1C, 0x27, 0xC0, 0x30, 0x72,
	0x55, 0xC4, 0xE8, 0xFB, 0x64, 0x48, 0xC0, 0xA4, 0x85, 0x36, 0xAD, 0x88,
	0xBF, 0x0A, 0x30, 0x52, 0xC4, 0xB8, 0xF8, 0x3A, 0xFD, 0x63, 0x3C, 0x08,
	0x78, 0x10, 0xF0, 0x20, 0xE0, 0xBF, 0x12, 0xD0, 0xEE, 0x74, 0x3A, 0x16,
	0x5C, 0x42, 0x8C, 0x44, 0xAB, 0xD5, 0xC2, 0xF0, 0x6B, 0x9C, 0x80, 0x9F,
	0x8D, 0x46, 0x63, 0xD9, 0xEB, 0xF5, 0x1A, 0x2A, 0xA0, 0x5E, 0xAF, 0x0B,
	0xAE, 0x71, 0x02, 0x4E, 0x8B, 0xC5, 0x62, 0xDA, 0x68, 0x01, 0xA5, 0x52,
	0x09, 0x9F, 0xE3, 0x2F, 0x03, 0x01, 0xCA, 0xBB, 0x79, 0x6F, 0x67, 0x67,
	0x67, 0x83, 0x6F, 0xC2, 0x9A, 0x51, 0x5F, 0xC4, 0x76, 0xBB, 0x4D, 0xBB,
	0xBB, 0xBB, 0x5D, 0x8E, 0xBF, 0x3F, 0x10, 0x80, 0x6B, 0x53, 0x1F, 0x97,
	0x2C, 0xE6, 0x63, 0x36, 0x9B, 0x4D, 0x6F, 0x6D, 0x6D, 0x19, 0x22, 0x20,
	0x97, 0xCB, 0x61, 0xF8, 0xC0, 0xD7, 0xB4, 0xCB, 0x81, 0x80, 0x91, 0x56,
	0x69, 0xF3, 0xE8, 0xE8, 0x68, 0x99, 0x8B, 0x31, 0x14, 0x8D, 0x46, 0x69,
	0x69, 0x69, 0x69, 0x26, 0xC4, 0xB5, 0x5A, 0x8D, 0x0E, 0x0F, 0x0F, 0x29,
	0x9F, 0xCF, 0x9F, 0xF2, 0x05, 0xF5, 0xB5, 0xEA, 0x1B, 0x6D, 0xCD, 0xDA,
	0x9C, 0x91, 0xF0, 0xC9, 0xC9, 0x49, 0x86, 0x6D, 0x3B, 0x93, 0xC9, 0x2C,
	0xAC, 0xAC, 0xAC, 0x88, 0xBB, 0xFD, 0x34, 0xE0, 0xA6, 0x84, 0xCA, 0xE5,
	0x32, 0x71, 0x56, 0x51, 0xFA, 0x43, 0x8D, 0x89, 0xE4, 0xFC, 0x53, 0x6B,
	0x86, 0x89, 0x9F, 0xF9, 0xBC, 0xD0, 0x9A, 0x3D, 0xA3, 0xBB, 0xD6, 0x6C,
	0x1A, 0xA0, 0x35, 0xFB, 0xCA, 0x31, 0xF7, 0xA0, 0x47, 0xFE, 0x09, 0xF2,
	0x41, 0x6B, 0x26, 0x3B, 0x56, 0xD9, 0x30, 0xCA, 0x26, 0xB2, 0xDF, 0xCB,
	0x6D, 0xD2, 0x8C, 0xA0, 0x36, 0xA7, 0x43, 0xAD, 0x99, 0xAC, 0x01, 0x39,
	0xCA, 0xAB, 0xF4, 0xAC, 0x81, 0xCC, 0xCA, 0x1E, 0x44, 0x6D, 0x07, 0x7F,
	0x03, 0xE2, 0x4C, 0x3C, 0x96, 0xA7, 0x75, 0x5D, 0x2B, 0x00, 0x00, 0x00,
	0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
};
tex.LoadImage(InputFieldBackground);
          GameObject InputField = new GameObject("InputField (TMP)", typeof(Image), typeof(TMP_InputField));
          InputField.transform.SetParent(Canvas.transform);
          InputField.GetComponent<Image>().type = Image.Type.Sliced;
          InputField.GetComponent<Image>().sprite = Sprite.Create(tex, new Rect(0.0f, 0.0f, tex.width, tex.height), new Vector2(16f, 16f), 200.0f, 0, SpriteMeshType.Tight, new Vector4(10, 10, 10, 10));
            InputField.GetComponent<RectTransform>().sizeDelta = new Vector2 (160, 30);
          GameObject Text_area = new GameObject("Text Area", typeof(RectMask2D));
          Text_area.transform.SetParent(InputField.transform);
          Text_area.GetComponent<RectTransform>().anchorMax = new Vector2(1,1);
          Text_area.GetComponent<RectTransform>().anchorMin = new Vector2(0,0);
          Text_area.GetComponent<RectTransform>().anchoredPosition = new Vector2(+0, -1);
          Text_area.GetComponent<RectTransform>().sizeDelta = new Vector2 (-20, -12);
          GameObject Placeholder = new GameObject("Placeholder", typeof(TextMeshProUGUI), typeof(LayoutElement));
          Placeholder.transform.SetParent(Text_area.transform);
          Placeholder.GetComponent<LayoutElement>().ignoreLayout = true;
          Placeholder.GetComponent<RectTransform>().anchorMax = new Vector2(1,1);
          Placeholder.GetComponent<RectTransform>().anchorMin = new Vector2(0,0);
          Placeholder.GetComponent<RectTransform>().offsetMax = new Vector2(0,0);
          Placeholder.GetComponent<RectTransform>().offsetMin = new Vector2(0,0);
          Placeholder.GetComponent<TextMeshProUGUI>().text = "Enter text..."; 
          Placeholder.GetComponent<TextMeshProUGUI>().enableWordWrapping = false;
          Placeholder.GetComponent<TextMeshProUGUI>().fontSize = 14;
          Placeholder.GetComponent<TextMeshProUGUI>().fontStyle = FontStyles.Italic;
          Placeholder.GetComponent<TextMeshProUGUI>().color = new Color(0f, 0f, 0f, 0.5f);
          GameObject text = new GameObject("Text", typeof(TextMeshProUGUI));
          text.transform.SetParent(Text_area.transform);
          text.GetComponent<RectTransform>().anchorMax = new Vector2(1,1);
          text.GetComponent<RectTransform>().anchorMin = new Vector2(0,0);
          text.GetComponent<RectTransform>().offsetMax = new Vector2(0,0);
          text.GetComponent<RectTransform>().offsetMin = new Vector2(0,0);
          text.GetComponent<TextMeshProUGUI>().fontSize = 14;
          text.GetComponent<TextMeshProUGUI>().color = Color.black;
          InputField.GetComponent<TMP_InputField>().textViewport = Text_area.GetComponent<RectTransform>();
          InputField.GetComponent<TMP_InputField>().textComponent = text.GetComponent<TextMeshProUGUI>();
          InputField.GetComponent<TMP_InputField>().fontAsset = text.GetComponent<TextMeshProUGUI>().font;
          InputField.GetComponent<TMP_InputField>().placeholder = Placeholder.GetComponent<TextMeshProUGUI>();
    } 

    private static List<GameObject> GUI_tmpinputfield = new List<GameObject>();

    public static GameObject GetRootGameObject(int id)
    {
        return GUI_tmpinputfield[id];
    }
 }
}
